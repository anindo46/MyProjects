import streamlit as st
import math

# --- Page setup ---
st.set_page_config(page_title="GeoLab Pro ‚Äì Geology Toolkit", layout="wide")

# --- Logo + Header ---
st.image("https://upload.wikimedia.org/wikipedia/commons/thumb/6/63/University_of_Barishal_logo.svg/800px-University_of_Barishal_logo.svg.png", width=100)

st.markdown("""
<style>
.big-title {
    font-size:40px !important;
    font-weight: bold;
}
.subtitle {
    font-size:18px !important;
    color: gray;
}
.footer {
    font-size:14px !important;
    text-align: center;
    color: #888;
    margin-top: 50px;
}
</style>
""", unsafe_allow_html=True)

st.markdown('<div class="big-title">GeoLab Pro ‚Äì Geology Toolkit</div>', unsafe_allow_html=True)
st.markdown('<div class="subtitle">A Smart, Bilingual Toolkit for Geology Students</div>', unsafe_allow_html=True)
st.markdown('<div class="subtitle">Developed by Anindo Paul Sourav | University of Barishal</div>', unsafe_allow_html=True)

st.markdown("---")

# --- Language toggle ---
language = st.radio("üåê Choose Language / ‡¶≠‡¶æ‡¶∑‡¶æ ‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®:", ["English", "‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ"])

# --- Sidebar tool selection ---
tool = st.sidebar.selectbox("üß≠ Choose a Tool / ‡¶è‡¶ï‡¶ü‡¶ø ‡¶ü‡ßÅ‡¶≤ ‡¶¨‡ßá‡¶õ‡ßá ‡¶®‡¶ø‡¶®:", [
    "True Dip Calculator",
    "Grain Size to Phi",
    "Porosity Calculator",
    "Stratigraphic Thickness Estimator",
    "Slope Gradient (%)"
])

st.markdown(f"### {tool}")

# --- Language helper ---
def label(text_en, text_bn):
    return text_en if language == "English" else text_bn

# --- TOOL 1: True Dip ---
if tool == "True Dip Calculator":
    st.subheader(label("True Dip from Apparent Dip", "‡¶Ü‡¶™‡¶æ‡¶§ ‡¶°‡¶ø‡¶™ ‡¶•‡ßá‡¶ï‡ßá ‡¶∏‡¶§‡ßç‡¶Ø‡¶ø‡¶ï‡¶æ‡¶∞‡ßá‡¶∞ ‡¶°‡¶ø‡¶™ ‡¶®‡¶ø‡¶∞‡ßç‡¶£‡¶Ø‡¶º"))
    ad = st.number_input(label("Apparent Dip (¬∞)", "‡¶Ü‡¶™‡¶æ‡¶§ ‡¶°‡¶ø‡¶™ (‡¶°‡¶ø‡¶ó‡ßç‡¶∞‡¶ø)"), 0.0)
    angle = st.number_input(label("Angle Between Directions (¬∞)", "‡¶¶‡¶ø‡¶ï‡ßá‡¶∞ ‡¶Æ‡¶ß‡ßç‡¶Ø‡¶ï‡¶æ‡¶∞ ‡¶ï‡ßã‡¶£ (‡¶°‡¶ø‡¶ó‡ßç‡¶∞‡¶ø)"), 0.0, 90.0)
    if st.button(label("Calculate", "‡¶π‡¶ø‡¶∏‡¶æ‡¶¨ ‡¶ï‡¶∞‡ßÅ‡¶®")):
        td = math.degrees(math.atan(math.tan(math.radians(ad)) / math.sin(math.radians(angle))))
        st.success(f"{label('True Dip', '‡¶∏‡¶§‡ßç‡¶Ø‡¶ø‡¶ï‡¶æ‡¶∞‡ßá‡¶∞ ‡¶°‡¶ø‡¶™')} = {td:.2f}¬∞")

# --- TOOL 2: Phi Scale ---
elif tool == "Grain Size to Phi":
    st.subheader(label("Convert Grain Size to Phi (œÜ)", "‡¶∂‡¶∏‡ßç‡¶Ø‡ßá‡¶∞ ‡¶Ü‡¶ï‡¶æ‡¶∞ ‡¶•‡ßá‡¶ï‡ßá ‡¶´‡¶æ‡¶á (œÜ) ‡¶®‡¶ø‡¶∞‡ßç‡¶£‡¶Ø‡¶º"))
    size = st.number_input(label("Grain Size (mm)", "‡¶∂‡¶∏‡ßç‡¶Ø‡ßá‡¶∞ ‡¶Ü‡¶ï‡¶æ‡¶∞ (‡¶Æ‡¶ø‡¶Æ‡¶ø)"), min_value=0.001)
    if st.button(label("Convert", "‡¶∞‡ßÇ‡¶™‡¶æ‡¶®‡ßç‡¶§‡¶∞ ‡¶ï‡¶∞‡ßÅ‡¶®")):
        phi = -math.log2(size)
        st.success(f"œÜ = {phi:.2f}")

# --- TOOL 3: Porosity ---
elif tool == "Porosity Calculator":
    st.subheader(label("Porosity % from Volume", "‡¶Ü‡¶Ø‡¶º‡¶§‡¶® ‡¶•‡ßá‡¶ï‡ßá ‡¶™‡¶∞‡ßã‡¶∏‡¶ø‡¶ü‡¶ø (%)"))
    pores = st.number_input(label("Pore Volume (cm¬≥)", "‡¶õ‡¶ø‡¶¶‡ßç‡¶∞‡ßá‡¶∞ ‡¶Ü‡¶Ø‡¶º‡¶§‡¶® (‡¶∏‡ßá‡¶Æ‡¶ø¬≥)"))
    total = st.number_input(label("Total Volume (cm¬≥)", "‡¶Æ‡ßã‡¶ü ‡¶Ü‡¶Ø‡¶º‡¶§‡¶® (‡¶∏‡ßá‡¶Æ‡¶ø¬≥)"))
    if total > 0 and st.button(label("Calculate", "‡¶π‡¶ø‡¶∏‡¶æ‡¶¨ ‡¶ï‡¶∞‡ßÅ‡¶®")):
        porosity = (pores / total) * 100
        st.success(f"{label('Porosity', '‡¶™‡¶∞‡ßã‡¶∏‡¶ø‡¶ü‡¶ø')} = {porosity:.2f}%")

# --- TOOL 4: Thickness ---
elif tool == "Stratigraphic Thickness Estimator":
    st.subheader(label("Estimate True Thickness of a Bed", "‡¶è‡¶ï‡¶ü‡¶ø ‡¶∏‡ßç‡¶§‡¶∞‡ßá‡¶∞ ‡¶™‡ßç‡¶∞‡¶ï‡ßÉ‡¶§ ‡¶™‡ßÅ‡¶∞‡ßÅ‡¶§‡ßç‡¶¨ ‡¶®‡¶ø‡¶∞‡ßç‡¶£‡¶Ø‡¶º"))
    obs_thickness = st.number_input(label("Measured Thickness (m)", "‡¶™‡¶∞‡¶ø‡¶Æ‡¶æ‡¶™‡¶ï‡ßÉ‡¶§ ‡¶™‡ßÅ‡¶∞‡ßÅ‡¶§‡ßç‡¶¨ (‡¶Æ‡¶ø)"))
    dip = st.number_input(label("Dip Angle (¬∞)", "‡¶°‡¶ø‡¶™ ‡¶ï‡ßã‡¶£ (‡¶°‡¶ø‡¶ó‡ßç‡¶∞‡¶ø)"), 0.0, 90.0)
    if st.button(label("Calculate", "‡¶π‡¶ø‡¶∏‡¶æ‡¶¨ ‡¶ï‡¶∞‡ßÅ‡¶®")):
        true_thick = obs_thickness * math.sin(math.radians(dip))
        st.success(f"{label('True Thickness', '‡¶™‡ßç‡¶∞‡¶ï‡ßÉ‡¶§ ‡¶™‡ßÅ‡¶∞‡ßÅ‡¶§‡ßç‡¶¨')} = {true_thick:.2f} m")

# --- TOOL 5: Slope Gradient ---
elif tool == "Slope Gradient (%)":
    st.subheader(label("Slope Gradient", "‡¶¢‡¶æ‡¶≤‡ßá‡¶∞ ‡¶ó‡ßç‡¶∞‡ßá‡¶°‡¶ø‡ßü‡ßá‡¶®‡ßç‡¶ü"))
    rise = st.number_input(label("Vertical Rise (m)", "‡¶â‡¶≤‡ßç‡¶≤‡¶Æ‡ßç‡¶¨ ‡¶â‡¶ö‡ßç‡¶ö‡¶§‡¶æ (‡¶Æ‡¶ø)"))
    run = st.number_input(label("Horizontal Run (m)", "‡¶Ö‡¶®‡ßÅ‡¶≠‡ßÇ‡¶Æ‡¶ø‡¶ï ‡¶¶‡ßÇ‡¶∞‡¶§‡ßç‡¶¨ (‡¶Æ‡¶ø)"))
    if run > 0 and st.button(label("Calculate", "‡¶π‡¶ø‡¶∏‡¶æ‡¶¨ ‡¶ï‡¶∞‡ßÅ‡¶®")):
        slope = (rise / run) * 100
        st.success(f"{label('Slope', '‡¶¢‡¶æ‡¶≤')} = {slope:.2f}%")

# --- Footer ---
st.markdown("---")
st.markdown(f'''
<div class="footer">
Developed by <b>Anindo Paul Sourav</b>
Department of Geology and Mining<br>
University of Barishal<br>
<br>
<a href="https://anindo46.github.io/portfolio/">MY PORTFOLIO</a><br>
Email: anindo.glm@gmail.com | üåê <a href="https://github.com/anindo46">GitHub</a>
</div>
''', unsafe_allow_html=True)
